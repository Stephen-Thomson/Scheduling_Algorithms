********************************************************************
Algorithms Scheduler

This program is designed to test run the following Algorithms on given task sets:
EDF
LLF
Algorithm A

It will also return the time it took to run the algorithm, or given a desired number of runs, the average time to run the algorithm.

The program will read in the Task Sets from a text file in the given format:


Begin <indicates the beginning of a new Task Set>
<number of tasks>
<number of processors>
<Y or N indicating if it's preemptive>
<start time>,<computation time>,<soft deadline>,<hard deadline>,<period>

If a value doesn't exist in a task set, set the value to 0.

Here is an example Task Set:

Begin
3
1
Y
0,2,5,5,5
1,1,4,4,4
2,2,20,20,20

Notice: For files that have a large amount of taskSets, the LCM has the possibility of an overflow.
        To stop this, the max the LCM could be for any task set is 18446744073709551615.

Instructions for running the current Main:
---
1. select/enter the name of the text file of task sets you wish to input.
2. You will be asked which algorithm you wish to run.
3. The program will then print out the selected taskset and algorithm(s)

Instructions for running the program with personal Main:
---
1. In main, you will need to first instantiate a Schedule, AlgorithmA, EDF_Algorithm, and ScheduleLLF.
2. Next you will need to run this Schedule method with the name of the file you wish to have read:
3. void readTaskSets(string filename);

Notice: If you run into any issues/errors with lcm, you need to switch the version of c++ visual studios uses.
1. Go to project tab
2. At the bottom click the properties
3. Change your c++ language standard to 17

You may then run any of these Schedule methods:

writeReults will write to the given filename the output of all algorithms for every task set entered. It will also write the average time taken to run each algorithm for the given number of runs.
void writeResults(string filename, int numruns, Schedule* EDF, Schedule* LLF, Schedule* AlgorithmA)



printScheduleEDF will print out the results of the EDF algorithm on the indicated Task Set.
void printScheduleEDF(int index, Schedule* EDF)



printScheduleLLF will print out the results of the LLF algorithm on the indicated Task Set.
void printScheduleLLF(int index, Schedule* LLF)



printScheduleAlgorithmA will print out the results of the Algorithm-A algorithm on the indicated Task Set.
void printScheduleAlgorithmA(int index, Schedule* AlgorithmA)



printSchedules will print out the results of all algorithms for the indicated Task Set.
void printSchedules(int index, Schedule* EDF, Schedule* LLF, Schedule* AlgorithmA)



printScheduleEDFAll will print out the results of the EDF algorithm for all Task Sets read.
void printScheduleEDFAll(Schedule * EDF)



printScheduleLLFAll will print out the results of the LLF algorithm for all Task Sets read.
void printScheduleLLFAll(Schedule* LLF)



printScheduleAlgorithmAAll will print out the results of the Algorithm-A algorithm for all Task Sets read.
void printScheduleAlgorithmAAll(Schedule * AlgorithmA)



printScheduleAll will print out the results of all algorithms for all Task Sets read.
void printSchedulesAll(Schedule* EDF, Schedule* LLF, Schedule* AlgorithmA)



printAverageTimesAll will print run each algorithm the number of times entered and give the average time with the schedules of all Task Sets read.
void printAverageTimesAll(int numruns, Schedule* EDF, Schedule* LLF, Schedule* AlgorithmA)



